<Project>
	<!--
    =====================================================  
              Set secrets at at build time
    =====================================================
    -->

	<Target Name="PreBuildGoogle" BeforeTargets="PreBuildEvent">
		<PropertyGroup>
			<SourceFile>$(ProjectDir)Host.cs</SourceFile>
			<MeasurementIdKeyFile>$(SolutionDir)MeasurementId.txt</MeasurementIdKeyFile>
			<MeasurementIdFileDummyKey>##MEASUREMENTID##</MeasurementIdFileDummyKey>
			<ApiSecretKeyFile>$(SolutionDir)ApiSecret.txt</ApiSecretKeyFile>
			<ApiSecretDummyKey>##APISECRET##</ApiSecretDummyKey>			
		</PropertyGroup>

		<ReadLinesFromFile File="$(MeasurementIdKeyFile)">
			<Output TaskParameter="Lines" PropertyName="MeasurementIdKey" />
		</ReadLinesFromFile>
		
		<ReadLinesFromFile File="$(ApiSecretKeyFile)">
			<Output TaskParameter="Lines" PropertyName="ApiSecretKey" />
		</ReadLinesFromFile>

		<ReplaceFileText
		  InputFilename="$(SourceFile)"
		  OutputFilename="$(SourceFile)"
		  MatchExpression="$(MeasurementIdFileDummyKey)"
		  ReplacementText="$(MeasurementIdKey)" />
		
		<ReplaceFileText
		  InputFilename="$(SourceFile)"
		  OutputFilename="$(SourceFile)"
		  MatchExpression="$(ApiSecretDummyKey)"
		  ReplacementText="$(ApiSecretKey)" />		
	</Target>

	<Target Name="PostBuildGoogle" BeforeTargets="PostBuildEvent">
		<PropertyGroup>
			<SourceFile>$(ProjectDir)Host.cs</SourceFile>
			<MeasurementIdKeyFile>$(SolutionDir)MeasurementId.txt</MeasurementIdKeyFile>
			<MeasurementIdFileDummyKey>##MEASUREMENTID##</MeasurementIdFileDummyKey>
			<ApiSecretKeyFile>$(SolutionDir)ApiSecret.txt</ApiSecretKeyFile>
			<ApiSecretDummyKey>##APISECRET##</ApiSecretDummyKey>
		</PropertyGroup>

		<ReadLinesFromFile File="$(MeasurementIdKeyFile)">
			<Output TaskParameter="Lines" PropertyName="MeasurementIdKey" />
		</ReadLinesFromFile>

		<ReadLinesFromFile File="$(ApiSecretKeyFile)">
			<Output TaskParameter="Lines" PropertyName="ApiSecretKey" />
		</ReadLinesFromFile>

		<ReplaceFileText
		  InputFilename="$(SourceFile)"
		  OutputFilename="$(SourceFile)"
		  MatchExpression="$(MeasurementIdKey)"
		  ReplacementText="$(MeasurementIdFileDummyKey)" />

		<ReplaceFileText
		  InputFilename="$(SourceFile)"
		  OutputFilename="$(SourceFile)"
		  MatchExpression="$(ApiSecretKey)"
		  ReplacementText="$(ApiSecretDummyKey)" />
	</Target>	
	


	<UsingTask Condition="'$(MSBuildRuntimeType)' == 'Full'" TaskName="ReplaceFileText" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
		<ParameterGroup>
			<InputFilename ParameterType="System.String" Required="true" />
			<OutputFilename ParameterType="System.String" Required="true" />
			<MatchExpression ParameterType="System.String" Required="true" />
			<ReplacementText ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Reference Include="System.Core" />
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
              File.WriteAllText(OutputFilename,Regex.Replace(File.ReadAllText(InputFilename),MatchExpression,ReplacementText));
        ]]>
			</Code>
		</Task>
	</UsingTask>

	<UsingTask Condition="'$(MSBuildRuntimeType)' == 'Core'" TaskName="ReplaceFileText" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<InputFilename ParameterType="System.String" Required="true" />
			<OutputFilename ParameterType="System.String" Required="true" />
			<MatchExpression ParameterType="System.String" Required="true" />
			<ReplacementText ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
              File.WriteAllText(OutputFilename,Regex.Replace(File.ReadAllText(InputFilename),MatchExpression,ReplacementText));
        ]]>
			</Code>
		</Task>
	</UsingTask>
</Project>
